# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/190qQhmoZu1Ksv0iQhyukykwcgYLx22xQ
"""



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score


df = pd.read_csv('Housing.csv')

# (Optional) Inspect data
print(df.head())
print(df.info())

# Handle categorical features if present
# For this dataset: convert 'mainroad', 'guestroom', etc. from 'yes'/'no' to 1/0
categorical = ['mainroad', 'guestroom', 'basement', 'hotwaterheating', 'airconditioning', 'parking', 'prefarea', 'furnishingstatus']
for col in categorical:
    if df[col].dtype == 'object':
        df[col] = df[col].map({'yes': 1, 'no': 0, 'furnished': 2, 'semi-furnished': 1, 'unfurnished': 0})

# 2. Split data into train-test sets (Simple regression with 'area')
X_simple = df[['area']]
y = df['price']
X_train_s, X_test_s, y_train_s, y_test_s = train_test_split(X_simple, y, test_size=0.2, random_state=42)

# 3. Fit a Linear Regression model (Simple Linear Regression)
model_simple = LinearRegression()
model_simple.fit(X_train_s, y_train_s)

# 4. Evaluate model
y_pred_s = model_simple.predict(X_test_s)
print('\n--- Simple Linear Regression (area vs price) ---')
print(f'Coefficient: {model_simple.coef_[0]:.2f}')
print(f'Intercept: {model_simple.intercept_:.2f}')
print(f'MAE: {mean_absolute_error(y_test_s, y_pred_s):.2f}')
print(f'MSE: {mean_squared_error(y_test_s, y_pred_s):.2f}')
print(f'R²: {r2_score(y_test_s, y_pred_s):.2f}')

# 5. Plot regression line
plt.scatter(X_test_s, y_test_s, color='blue', label='Actual')
plt.plot(X_test_s, y_pred_s, color='red', label='Predicted')
plt.xlabel('Area (sq ft)')
plt.ylabel('House Price')
plt.title('Simple Linear Regression (Area vs Price)')
plt.legend()
plt.show()

# Multiple Linear Regression - using all features except target
X_multi = df.drop(['price'], axis=1)
y = df['price']
X_train_m, X_test_m, y_train_m, y_test_m = train_test_split(X_multi, y, test_size=0.2, random_state=42)

model_multi = LinearRegression()
model_multi.fit(X_train_m, y_train_m)
y_pred_m = model_multi.predict(X_test_m)

print('\n--- Multiple Linear Regression (All features) ---')
print(f'Coefficients:\n{pd.Series(model_multi.coef_, X_multi.columns)}')
print(f'Intercept: {model_multi.intercept_:.2f}')
print(f'MAE: {mean_absolute_error(y_test_m, y_pred_m):.2f}')
print(f'MSE: {mean_squared_error(y_test_m, y_pred_m):.2f}')
print(f'R²: {r2_score(y_test_m, y_pred_m):.2f}')